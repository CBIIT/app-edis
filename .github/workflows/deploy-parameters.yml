# This is a basic workflow to help you get started with Actions

name: 3.0 - Update Parameters

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      envt:
        description: 'Environment'
        required: true
        default: dev
      tier:
        description: 'Deployment tier'
        required: true
      secure:
        description: 'Secure parameters'
        required: false
        default: ''
      unsecure:
        description: 'Unsecure parameters'
        required: false
        default: ''
      s3bucket:
        description: 'S3 bucket with Oracle Lambda layer file'
        required: true
        default: cf-templates-woyzwinjenjf-us-east-1
      host-runner:
        type: string
        required: false
        description: 'Selected self hosted (nci-self-hosted) of github hosted () runner'
        default: 'ubuntu-latest'

jobs:
  deployment:
    # The type of runner that the job will run on
    runs-on: ${{ inputs.host-runner }}

    environment: ${{ inputs.envt }}

    permissions:
      packages: write
      id-token: write
      contents: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Repository Checkout
        uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: Setup AWS configuration
        env:
          OIDC_ROLE: ${{ secrets.AWS_OIDC_PROVIDER_ROLE }}
        if: "${{ env.OIDC_ROLE != '' }}"
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_PROVIDER_ROLE }}
          role-session-name: TestSessionWithOIDC
          aws-region: us-east-1

      - name: Init Terraform
        id: initUserInfo
        run: terraform init -backend-config="bucket=${{ inputs.s3bucket }}" -backend-config="key=api-edis-tf-state/parameters-store-${{ inputs.tier }}" -backend-config="region=us-east-1"
        working-directory: tf-parameters/

      - name: Validate Terraform
        id: validate
        run: terraform validate
        working-directory: tf-parameters/

      - name: Planning Terraform
        id: plan
        run: terraform plan -var 'env=${{ inputs.tier }}' -var 'parameters=${{ inputs.unsecure }}' -var 'secure_parameters=${{ inputs.secure }}'
        working-directory: tf-parameters/

      - name: Terraform Deployment
        id: apply
        run: terraform apply -auto-approve -input=false -lock=false -var 'env=${{ inputs.tier }}' -var 'parameters=${{ inputs.unsecure }}' -var 'secure_parameters=${{ inputs.secure }}'
        working-directory: tf-parameters/
