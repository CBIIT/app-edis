# This is a basic workflow to help you get started with Actions

name: _EDIS SAM Deployment

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs: 
      tier:
        description: 'Environment tier'
        required: true
        default: dev
      lambda_build_number:
        description: "Number of the build workflow run"
        required: true
      s3bucket:
        description: 'S3 bucket to use for deployment'
        required: true
        default: cf-templates-woyzwinjenjf-us-east-1

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    environment: ${{ github.event.inputs.tier }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Workflow Parameters
        run: |
          echo environment secrets ${{ secrets.AWS_ACCESS_KEY_ID }} and ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          echo Environment Tier - ${{ github.event.inputs.tier }}
          echo Lambda Build Number - ${{ github.event.inputs.lambda_build_number }}
          echo S3 Bucket - ${{ github.event.inputs.s3bucket }}
      
      - name: Download built Lambda functions
        uses: dawidd6/action-download-artifact@v2
        with: 
          workflow: lambda-build.yml
          workflow_conclusion: success
          run_number: ${{ github.event.inputs.lambda_build_number }}
          name: lambda-zip
          path: lambda-zip
      
      - name: Check the existence of artifact
        run: |
          ls -la lambda-zip/lambda-userapi

      - name: Setup AWS configuration
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: Test AWS Configuration
        if: success()
        run: |
          aws cloudformation describe-stacks | grep StackName
          
      - name: EDIS sam deployment
        if: success()
        working-directory: install-scripts
        run: |
          ./sam-deploy-no-profile.sh -a ${{ github.event.inputs.s3bucket }} -t ${{ github.event.inputs.tier }}