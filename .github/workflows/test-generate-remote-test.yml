# This is a basic workflow to help you get started with Actions

name: TEST - Remote - Build and Deploy

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      envt:
        description: 'Environment'
        required: true
        type: string
        default: dev
      s3bucket:
        description: 'S3 bucket to use for deployment'
        required: true
        type: string
        default: cf-templates-woyzwinjenjf-us-east-1
      host-runner:
        description: 'Selected self hosted (nci-self-hosted) of github hosted () runner'
        required: true
        type: string
        default: 'ubuntu-latest'

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ inputs.host-runner }}
    
    environment: ${{ inputs.envt }}

    permissions:
      packages: write
      id-token: write
      contents: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Repository Checkout
        uses: actions/checkout@v3
        with: 
          repository: CBIIT/app-edis

      # Runs a set of commands using the runners shell
      - name: Workflow Parameters
        run: |
          echo Environment - ${{ inputs.envt }}
          echo Deployment Tier - ${{ inputs.tier }}
          echo S3 Bucket - ${{ inputs.s3bucket }}
          echo Secret - ${{ secrets.AWS_OIDC_PROVIDER_ROLE }}

      - name: Setup AWS configuration
        env: 
          OIDC_ROLE: ${{ secrets.AWS_OIDC_PROVIDER_ROLE }}
        if: "${{ env.OIDC_ROLE != '' }}"
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_PROVIDER_ROLE }}
          role-session-name: TestSessionWithOIDC
          aws-region: us-east-1

      - name: Install Terraform
        id: install
        uses: hashicorp/setup-terraform@v2
        with: 
          terraform_wrapper: false
      
      - name: Init Terraform 
        id: init
        run: terraform init -backend-config="bucket=${{ inputs.s3bucket }}" -backend-config="key=api-edis-tf-state/test-generate-ts" -backend-config="region=us-east-1"
        working-directory: generate-ts-swagger/deploy_test/

      - name: Validate Terraform
        id: validate
        run: terraform validate
        working-directory: generate-ts-swagger/deploy_test/

      - name: Planning Terraform
        id: plan
        run: terraform plan
        working-directory: generate-ts-swagger/deploy_test/

      - name: Terraform Deployment
        id: apply
        run: terraform apply -auto-approve -input=false -lock=false
        working-directory: generate-ts-swagger/deploy_test/
