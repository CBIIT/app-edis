# This is a basic workflow to help you get started with Actions

name: 3.01 - Set Parameter
run-name: 3.01 - Set Parameter - ${{ inputs.pspath }}

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      envt:
        description: 'Environment'
        required: true
        default: dev
      secure:
        description: 'Secured string'
        required: false
        type: boolean
        default: false
      pspath:
        description: 'Parameters Store Path'
        required: true
        default: '/dev/app/eadis/XXX'
      psvalue:
        description: 'Value for Parameters Store Path'
        required: true
      host-runner:
        type: string
        required: false
        description: 'Selected self hosted (nci-self-hosted) of github hosted () runner'
        default: 'ubuntu-latest'

jobs:
  deployment:
    # The type of runner that the job will run on
    runs-on: ${{ inputs.host-runner }}

    environment: ${{ inputs.envt }}

    permissions:
      packages: write
      id-token: write
      contents: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Hide sensitive input values to keep them private in the logs
        if: "${{ inputs.secure == true}}"
        uses: levibostian/action-hide-sensitive-inputs@v1
        with:
          exclude_inputs: envt,pspath,secure,host-runner

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#      - name: Repository Checkout
#        uses: actions/checkout@v4

      # Runs a set of commands using the runners shell
      - name: Setup AWS configuration
        env:
          OIDC_ROLE: ${{ secrets.AWS_OIDC_PROVIDER_ROLE }}
        if: "${{ env.OIDC_ROLE != '' }}"
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_PROVIDER_ROLE }}
          role-session-name: TestSessionWithOIDC
          aws-region: us-east-1

      - name: Add/Update Parameters Store key pair
        run: |
          aws ssm put-parameter --name ${{ inputs.pspath }} --value ${{ inputs.psvalue }} --type ${{ inputs.secure && 'SecureString' || 'String' }} --overwrite

#      - name: Init Terraform
#        id: initUserInfo
#        run: terraform init
#        working-directory: tf-one-parameter-store/
#
#      - name: Validate Terraform
#        id: validate
#        run: terraform validate
#        working-directory: tf-one-parameter-store/
#
#      - name: Terraform Deployment
#        id: apply
#        run: terraform apply -auto-approve -input=false -lock=false -var 'pspath=${{ inputs.pspath }}' -var 'secure=${{ inputs.secure }}' -var 'psvalue=${{ inputs.psvalue }}'
#        working-directory: tf-one-parameter-store/
