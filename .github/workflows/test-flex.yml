# This is a basic workflow to help you get started with Actions

name: _Test github variables

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
# Inputs for the workflow
    inputs:
      envt:
        type: string
        description: 'Environment'
        required: true
        default: dev
      subnet1:
        type: string
        description: 'VPC Subnet 1 id'
        required: false
      awsparams:
        type: string
        description: 'AWS Parameters'
        required: false
      host-runner:
        type: string
        required: true
        description: 'Selected self hosted (nci-self-hosted) of github hosted () runner'
        default: 'ubuntu-latest'


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ inputs.host-runner }}
    #[nci-self-hosted]
    environment: ${{ inputs.envt }}

    permissions: 
      packages: write
      id-token: write
      contents: write

    env:
      subnet: ${{ inputs.subnet1 || vars.subnet1 }}
  # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Workflow Parameters
        run: |
          echo From environment - ${{ vars.subnet1 }}
          echo From inputs - ${{ inputs.subnet1 }}
          echo Calculated var - $subnet

      - name: Process JSON input
        id: awsjson
        if: ${{ inputs.awsparams }}
        run: |
          tempObj=${{fromJson(inputs.awsparams)}}
          echo "$tempObj"
          echo "$tempObj.s3bucket"
          echo "{$tempObj.s3bucket}"
          echo "aws=${{fromJson(inputs.awsparams)}}" >> GITHUB_OUTPUT
          echo "aws1=$tempObj" >> GITHUB_OUTPUT

      - name: Use JSON input
        run: |
          echo "${{steps.awsjson.outputs.aws}}"
          echo "${{steps.awsjson.outputs.aws.s3bucket}}"
          echo "${{steps.awsjson.outputs.aws}}.s3bucket"
          echo "${{steps.awsjson.outputs.aws1}}"
          echo "${{steps.awsjson.outputs.aws1}}.s3bucket"