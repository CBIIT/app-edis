openapi: 3.0.0
info:
  description: Enterprise Data & Integration Services Web Services - **NED REST Web Service**
  version: "0.1.0"
  title: User REST Web Service API
  # put the contact info for your development or API team
  contact:
    email: NCICBIITBizAppsSupportLowTier@mail.nih.gov
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
x-amazon-apigateway-request-validators:
  all:
    validateRequestBody: true
    validateRequestParameters: true
  params:
    validateRequestBody: true
    validateRequestParameters: true
  body:
    validateRequestBody: true
    validateRequestParameters: false

# tags are used for organizing operations
tags:
  - name: clients
    description: Operations available to clients - service to service

paths:
  /userapi/ned/changesByIc/{ic}:
    get:
      tags:
        - clients
      summary: List NED Changes for the given IC
      operationId: getNEDChangesByIC
      description: |
        List NED Change records that satisfy given IC criteria
      parameters:
        - name: ic
          in: path
          description: IC
          required: true
          schema:
            type: string
            example: 'NCI'
        - name: From_Date
          in: query
          required: false
          schema:
            type: string
            example: 2022-03-01
        - name: From_Time
          in: query
          required: false
          schema:
            type: string
            example: 00:00:00
        - name: To_Date
          in: query
          required: false
          schema:
            type: string
            example: 2022-03-01
        - name: To_Time
          in: query
          required: false
          schema:
            type: string
            example: 00:00:00
      responses:
        '200':
          $ref: '#/components/responses/ChangesByIcResponse'
      x-amazon-apigateway-integration:
        uri: ${lambda_invoke_arn  }
        httpMethod: POST
        timeoutInMillis: 29000
        type: aws_proxy
      security:
        - request-authorizer: []

  /userapi/vds/userById/{id}:
    get:
      tags:
        - clients
      summary: Get VDS User record by the given NIH id (UNIQUEIDENTIFIER)
      operationId: getVDSUserByNIHId
      description: |
        Get VDS User record(s) that satisfied NIH ID criteria
      parameters:
        - name: id
          in: path
          required: true
          description: user NIH ID
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/vdsresponse'
      x-amazon-apigateway-integration:
        uri: ${lambda_invoke_arn}
        httpMethod: POST
        timeoutInMillis: 29000
        type: aws_proxy
      security:
        - request-authorizer: []

  /userapi/vds/usersByIc/{ic}:
    get:
      tags:
        - clients
      summary: List VDS user records by the given IC
      operationId: listVDSUsersByIC
      description: |
        Get VDS user records that satisfied IC criteria
      parameters:
        - name: ic
          in: path
          description: IC
          required: true
          schema:
            type: string
            example: 'NCI'
        - name: lastEvaluatedKey
          in: query
          description: Last Evaluated Key from previous request
          required: false
          schema:
            type: string
            example: '12345'
      responses:
        '200':
          $ref: '#/components/responses/vdsUsersByIcResponse'
      x-amazon-apigateway-integration:
        type: aws
        httpMethod: POST
        uri: ${ddb_action_query}
        credentials: ${ddb_role_arn}
        timeoutInMillis: 29000
        passthroughBehavior: when_no_templates
        cacheKeyParameters:
          - method.request.path.ic
          - method.request.querystring.lastEvaluatedKey
        requestTemplates:
          application/json: |-
            #set($ic = $input.params('ic'))
            #set($lastEvaluatedKey = $input.params('lastEvaluatedKey'))
            {
              "TableName": "${users_table_name}",
              "IndexName": "icIndex",
              "KeyConditionExpression": "NIHORGACRONYM = :ic",
              "FilterExpression": "attribute_not_exists(vdsDelete)",
              "ExpressionAttributeValues": {
                ":ic": { "S": "$ic" }
              }
            #if($lastEvaluatedKey != "")
              , "ExclusiveStartKey": { "NEDId": { "S": "$lastEvaluatedKey" }, "NIHORGACRONYM": { "S": "$ic" } }
            #end
            }
        responses:
          2\d{2}:
            statusCode: 200
            responseTemplates:
              application/json: |-
                #set ($inputRoot = $input.path('$'))
                #set ($lastEvaluatedKey = $inputRoot.LastEvaluatedKey.NEDId.S)
                {
                  "count": $inputRoot.Count,
                #if($lastEvaluatedKey != "")
                  "lastEvaluatedKey": "$lastEvaluatedKey",
                #end
                  "items": [
                #foreach($elem in $inputRoot.Items)
                    {
                      "UNIQUEIDENTIFIER": "$elem.UNIQUEIDENTIFIER.S",
                      "NIHDUPUID": "$elem.NIHDUPUID.S",
                      "NIHADACCTREQ": "$elem.NIHADACCTREQ.S",
                      "NIHSSOUSERNAME": "$elem.NIHSSOUSERNAME.S",
                      "distinguishedName": "$elem.distinguishedName.S",
                      "NIHADMAILBOXREQ": "$elem.NIHADMAILBOXREQ.S",
                      "NIHPRIMARYSMTP": "$elem.NIHPRIMARYSMTP.S",
                      "MAIL": "$elem.MAIL.S",
                      "proxyAddresses": [
                         #foreach($paddr in $elem.proxyAddresses.L)
                         "$paddr.S"#if($foreach.hasNext),#end

                         #end
                      ],
                      "displayName": "$util.escapeJavaScript($elem.displayName.S)",
                      "PERSONALTITLE": "$elem.PERSONALTITLE.S",
                      "GIVENNAME": "$elem.GIVENNAME.S",
                      "NIHCOMMONGIVENNAME": "$elem.NIHCOMMONGIVENNAME.S",
                      "NIHNOMIDDLENAME": "$elem.NIHNOMIDDLENAME.S",
                      "MIDDLENAME": "$elem.MIDDLENAME.S",
                      "NIHCOMMONMIDDLENAM": "$elem.NIHCOMMONMIDDLENAM.S",
                      "NIHMIXCASESN": "$elem.NIHMIXCASESN.S",
                      "NIHMIXCASECOMMONSN": "$elem.NIHMIXCASECOMMONSN.S",
                      "SN": "$elem.SN.S",
                      "NIHCOMMONSN": "$elem.NIHCOMMONSN.S",
                      "GENERATIONQUALIF": "$elem.GENERATIONQUALIF.S",
                      "NIHCOMMONGENQUALIF": "$elem.NIHCOMMONGENQUALIF.S",
                      "NIHSUFFIXQUALIFIER": "$elem.NIHSUFFIXQUALIFIER.S",
                      "TITLE": "$elem.TITLE.S",
                      "NIHIPD": "$elem.NIHIPD.S",
                      "NIHBADGETITLE": "$elem.NIHBADGETITLE.S",
                      "NIHIDBADGEEXPDATE": "$elem.NIHIDBADGEEXPDATE.S",
                      "NIHSAC": "$elem.NIHSAC.S",
                      "NIHPrivacyAwarenessCompDate": "$elem.NIHPrivacyAwarenessCompDate.S",
                      "PrivacyAwarenessRefresherCompDate": "$elem.PrivacyAwarenessRefresherCompDate.S",
                      "NIHInformationSecurityAwarenessCompDate": "$elem.NIHInformationSecurityAwarenessCompDate.S",
                      "InformationSecurityRefresherCompDate": "$elem.InformationSecurityRefresherCompDate.S",
                      "description": "$util.escapeJavaScript($elem.description.S)",
                      "ORGANIZATIONALSTAT": "$elem.ORGANIZATIONALSTAT.S",
                      "NIHSUBORGSTATUS": "$elem.NIHSUBORGSTATUS.S",
                      "NIHSUMMERSTATUS": "$elem.NIHSUMMERSTATUS.S",
                      "NIHORGPATH": "$elem.NIHORGPATH.S",
                      "NIHPHYSICALADDRESS": "$elem.NIHPHYSICALADDRESS.S",
                      "NIHORGACRONYM": "$elem.NIHORGACRONYM.S",
                      "NIHSERVAO": "$elem.NIHSERVAO.S",
                      "MANAGER": "$elem.MANAGER.S",
                      "NIHCOTRID": "$elem.NIHCOTRID.S",
                      "NIHPOC": "$elem.NIHPOC.S",
                      "NIHCOMPANYNAME": "$elem.NIHCOMPANYNAME.S",
                      "NIHCOMPANYPHONE": "$elem.NIHCOMPANYPHONE.S",
                      "countryCode": "$elem.countryCode.S",
                      "TELEPHONENUMBER": "$elem.TELEPHONENUMBER.S",
                      "MOBILETELEPHONENUM": "$elem.MOBILETELEPHONENUM.S",
                      "mobile": "$elem.mobile.S",
                      "ipPhone": "$elem.ipPhone.S",
                      "NIHSITE": "$elem.NIHSITE.S",
                      "L": "$elem.L.S",
                      "BUILDINGNAME": "$elem.BUILDINGNAME.S",
                      "ROOMNUMBER": "$elem.ROOMNUMBER.S",
                      "POSTALADDRESS": "$elem.POSTALADDRESS.S",
                      "NIHIDBADGELESS6MOS": "$elem.NIHIDBADGELESS6MOS.S",
                      "managedObjects": "$elem.managedObjects.S",
                      "memberOf": [
                         #foreach($grp in $elem.memberOf.L)
                         "$grp.S"#if($foreach.hasNext),#end

                         #end
                      ],
                      "NIHCREATETIMESTAMP": "$elem.NIHCREATETIMESTAMP.S",
                      "NIHMODIFYTIMESTAMP": "$elem.NIHMODIFYTIMESTAMP.S",
                      "NIHMODIFIERSNAME": "$elem.NIHMODIFIERSNAME.S",
                      "NIHDIRENTRYEFFECTIVEDATE": "$elem.NIHDIRENTRYEFFECTIVEDATE.S",
                      "NIHDIRENTRYEXPIRATIONDATE": "$elem.NIHDIRENTRYEXPIRATIONDATE.S",
                      "userAccountControl": "$elem.userAccountControl.S",
                      "USER_ID": "$elem.USER_ID.S",
                      "PERSON_ID": "$elem.PERSON_ID.N",
                      "FIRST_NAME": "$elem.FIRST_NAME.S",
                      "LAST_NAME": "$elem.LAST_NAME.S",
                      "NAME_PREFIX": "$elem.NAME_PREFIX.S",
                      "MI_NAME": "$elem.MI_NAME.S",
                      "NAME_SUFFIX": "$elem.NAME_SUFFIX.S",
                      "EMAIL": "$elem.EMAIL.S",
                      "ORG_NAME": "$elem.ORG_NAME.S",
                      "ORG_ID": "$elem.ORG_ID.N",
                      "ORG_ADDRESS_1": "$elem.LINE_1_ADDR.S",
                      "ORG_ADDRESS_2": "$elem.LINE_2_ADDR.S",
                      "ORG_ADDRESS_3": "$elem.LINE_3_ADDR.S",
                      "ORG_ADDRESS_4": "$elem.LINE_4_ADDR.S",
                      "ORG_ADDRESS_5": "$elem.LINE_5_ADDR.S",
                      "CITY": "$elem.CITY.S",
                      "STATE": "$elem.STATE.S",
                      "PHONE_NUMBER": "$elem.PHONE_NUMBER.S",
                      "ORG_EMAIL": "$elem.ORG_EMAIL.S",
                      "ACCOUNT_CREATED_DATE": "$elem.ACCOUNT_CREATED_DATE.S",
                      "ACCOUNT_UPDATED_DATE": "$elem.ACCOUNT_UPDATED_DATE.S",
                      "STATUS_CODE": "$elem.STATUS_CODE.N",
                      "STATUS_DESC": "$elem.STATUS_DESCRIP.S",
                      "LAST_UPDATED_DAY": "$elem.LAST_UPDATED_DAY.S",
                      "LOGINGOV_USER_ID": "$elem.LOGINGOV_USER_ID.S",
                      "ALIAS_DESCRIP": "$elem.ALIAS_DESCRIP.S",
                      "providedEmail": "$elem.providedEmail.S",
                      "DOC": "$elem.DOC.S"
                    }#if($foreach.hasNext),#end

                #end
                  ]
                }
      security:
        - request-authorizer: []

  /userapi/nv/props:
    get:
      tags:
        - clients
      summary: List all nVision user properties
      operationId: listNVProperties
      description: |
        Get all nVision property records
      parameters:
        - name: lastEvaluatedKey
          in: query
          description: Last Evaluated Key from previous request
          required: false
          schema:
            type: string
            example: '12345'
      responses:
        '200':
          $ref: '#/components/responses/nvPropsResponse'
      x-amazon-apigateway-integration:
        type: aws
        httpMethod: POST
        uri: ${ddb_action_scan}
        credentials: ${prop_ddb_role_arn}
        timeoutInMillis: 29000
        passthroughBehavior: when_no_templates
        cacheKeyParameters:
          - method.request.querystring.lastEvaluatedKey
        requestTemplates:
          application/json: |-
            #set($lastEvaluatedKey = $input.params('lastEvaluatedKey'))
            {
              "TableName": "${props_table_name}"
            #if($lastEvaluatedKey != "")
              , "ExclusiveStartKey": { "ASSET_KEY": { "S": "$lastEvaluatedKey" } }
            #end
            }
        responses:
          2\d{2}:
            statusCode: 200
            responseTemplates:
              application/json: |-
                #set ($inputRoot = $input.path('$'))
                #set ($lastEvaluatedKey = $inputRoot.LastEvaluatedKey.ASSET_KEY.S)
                {
                  "count": $inputRoot.Count,
                #if($lastEvaluatedKey != "")
                  "lastEvaluatedKey": "$lastEvaluatedKey",
                #end
                  "items": [
                #foreach($elem in $inputRoot.Items)
                    {
                      "PRIMARY_CONTACT_FULL_NM": "$elem.PRIMARY_CONTACT_FULL_NM.S",
                      "LOCATION_FULL_STR": "$elem.LOCATION_FULL_STR.S",
                      "SUPERVISOR_FULL_NAME": "$elem.SUPERVISOR_FULL_NAME.S",
                      "PATIENT_CARE_FLG": "$elem.PATIENT_CARE_FLG.S",
                      "PRIMARY_CONTACT_LOCATION": "$elem.PRIMARY_CONTACT_LOCATION.S",
                      "ACCTBLE_USER_FULL_LOCATION": "$elem.ACCTBLE_USER_FULL_LOCATION.S",
                      "SUPERVISOR_FULL_LOCATION": "$elem.SUPERVISOR_FULL_LOCATION.S",
                      "OFFICIAL_NM": "$elem.OFFICIAL_NM.S",
                      "WRKF_KEY": "$elem.WRKF_KEY.N",
                      "SUPERVISOR_WRKF_KEY": "$elem.SUPERVISOR_WRKF_KEY.N",
                      "CURRENT_FLG": "$elem.CURRENT_FLG.S",
                      "ASSET_VALUE_KEY": "$elem.ASSET_VALUE_KEY.N",
                      "ASSET_KEY": "$elem.ASSET_KEY.S",
                      "INTEREST_ASSET_KEY": "$elem.INTEREST_ASSET_KEY.N",
                      "INITIAL_EVENT_KEY": "$elem.INITIAL_EVENT_KEY.N",
                      "EVENT_KEY": "$elem.EVENT_KEY.N",
                      "ACTIVITY_STATUS_DESC": "$elem.ACTIVITY_STATUS_DESC.S",
                      "ASSET_TYP_CD": "$elem.ASSET_TYP_CD.S",
                      "IC_CD": "$elem.IC_CD.S",
                      "ORG_CD": "$elem.ORG_CD.S",
                      "MANUFACTURER_NM": "$elem.MANUFACTURER_NM.S",
                      "MODEL_NBR": "$elem.MODEL_NBR.S",
                      "SERIAL_NBR": "$elem.SERIAL_NBR.S",
                      "FULL_NAME": "$elem.FULL_NAME.S",
                      "CURR_NED_ID": "$elem.CURR_NED_ID.S",
                      "ORIG_NED_ID": "$elem.ORIG_NED_ID.S",
                      "PO_NBR": "$elem.PO_NBR.S",
                      "ACQUISITION_DT": "$elem.ACQUISITION_DT.S",
                      "LAST_INVENTORY_DT": "$elem.LAST_INVENTORY_DT.S",
                      "SENSITIVE_FLG": "$elem.SENSITIVE_FLG.S",
                      "ASSET_TYP_DESC": "$elem.ASSET_TYP_DESC.S",
                      "ACQUISITION_COST": "$elem.ACQUISITION_COST.N",
                      "AGRMNT_ID": "$elem.AGRMNT_ID.S",
                      "LAST_INVENTORY_RESOLUTION": "$elem.LAST_INVENTORY_RESOLUTION.S",
                      "UNCAPITALIZED_REASON_CD": "$elem.UNCAPITALIZED_REASON_CD.S",
                      "UNCAPITALIZED_REASON_DESC": "$elem.UNCAPITALIZED_REASON_DESC.S",
                      "CONDITION_DESC": "$elem.CONDITION_DESC.S",
                      "EVENT_DT": "$elem.EVENT_DT.S",
                      "EVENT_TYP_DESC": "$elem.EVENT_TYP_DESC.S",
                      "PERSONAL_CUSTODY_FLG": "$elem.PERSONAL_CUSTODY_FLG.S",
                      "SERVICE_LIFE": "$elem.SERVICE_LIFE.S",
                      "ASSET_DECAL_NBR": "$elem.ASSET_DECAL_NBR.S",
                      "CAPITAL_FLG": "$elem.CAPITAL_FLG.S",
                      "APPROPRIATION_CD": "$elem.APPROPRIATION_CD.S",
                      "ACCUMULATED_DEPRECIATION": "$elem.ACCUMULATED_DEPRECIATION.S",
                      "MONTHLY_DEPRECIATION": "$elem.MONTHLY_DEPRECIATION.N",
                      "YTD_DEPRECIATION": "$elem.YTD_DEPRECIATION.N",
                      "ASSET_VALUE": "$elem.ASSET_VALUE.N",
                      "OTHER_USER": "$elem.OTHER_USER.S",
                      "OLD_ASSET_ID": "$elem.OLD_ASSET_ID.S",
                      "RESPONSIBILITY_BEGIN_DT": "$elem.RESPONSIBILITY_BEGIN_DT.S",
                      "NON_STANDARD_DESC": "$elem.NON_STANDARD_DESC.S",
                      "WARRANTY_EXPIRATION_DT": "$elem.WARRANTY_EXPIRATION_DT.S",
                      "LOCATION_OFFSITE_DESC": "$elem.LOCATION_OFFSITE_DESC.S",
                      "LOCATION_ADDRESS_LINE_1": "$elem.LOCATION_ADDRESS_LINE_1.S",
                      "LOCATION_ADDRESS_LINE_2": "$elem.LOCATION_ADDRESS_LINE_2.S",
                      "LOCATION_ADDRESS_LINE_3": "$elem.LOCATION_ADDRESS_LINE_3.S",
                      "LOCATION_CITY_NM": "$elem.LOCATION_CITY_NM.S",
                      "LOCATION_STATE_CD": "$elem.LOCATION_STATE_CD.S",
                      "LOCATION_STATE_NM": "$elem.LOCATION_STATE_NM.S",
                      "LOCATION_COUNTRY_NM": "$elem.LOCATION_COUNTRY_NM.S",
                      "LOCATION_COUNTY_NM": "$elem.LOCATION_COUNTY_NM.S",
                      "LOCATION_POSTAL_CD": "$elem.LOCATION_POSTAL_CD.S",
                      "FLAG_1": "$elem.FLAG_1.S"
                    }#if($foreach.hasNext),#end

                #end
                  ]
                }
      security:
        - request-authorizer: []

  /userapi/nv/props/user/{nihId}:
    get:
      tags:
        - clients
      summary: List all nVision properties for given user
      operationId: listNVPropertiesByUserId
      description: |
        Get all nVision property records for given user NIH ID
      parameters:
        - name: nihId
          in: path
          description: User NIH ID
          required: true
          schema:
            type: string
            example: '01234567890'
        - name: lastEvaluatedKey
          in: query
          description: Last Evaluated Key from previous request
          required: false
          schema:
            type: string
            example: '12345'
      responses:
        '200':
          $ref: '#/components/responses/nvPropsResponse'
      x-amazon-apigateway-integration:
        type: aws
        httpMethod: POST
        uri: ${ddb_action_query}
        credentials: ${prop_ddb_role_arn}
        timeoutInMillis: 29000
        passthroughBehavior: when_no_templates
        cacheKeyParameters:
          - method.request.path.nihId
          - method.request.querystring.lastEvaluatedKey
        requestTemplates:
          application/json: |-
            #set($nihId = $input.params('nihId'))
            #set($lastEvaluatedKey = $input.params('lastEvaluatedKey'))
            {
              "TableName": "${props_table_name}",
              "IndexName": "nedidIndex",
              "KeyConditionExpression": "CURR_NED_ID = :nihId",
              "ExpressionAttributeValues": {
                ":nihId": { "S": "$nihId" }
              }

            #if($lastEvaluatedKey != "")
              , "ExclusiveStartKey": { "ASSET_KEY": { "S": "$lastEvaluatedKey" } }
              , "ExclusiveStartKey": { "ASSET_KEY": { "S": "$lastEvaluatedKey" }, "CURR_NED_ID": { "S": "$nihId" } }
            #end
            }
        responses:
          2\d{2}:
            statusCode: 200
            responseTemplates:
              application/json: |-
                #set ($inputRoot = $input.path('$'))
                #set ($lastEvaluatedKey = $inputRoot.LastEvaluatedKey.ASSET_KEY.S)
                {
                  "count": $inputRoot.Count,
                #if($lastEvaluatedKey != "")
                  "lastEvaluatedKey": "$lastEvaluatedKey",
                #end
                  "items": [
                #foreach($elem in $inputRoot.Items)
                    {
                      "PRIMARY_CONTACT_FULL_NM": "$elem.PRIMARY_CONTACT_FULL_NM.S",
                      "LOCATION_FULL_STR": "$elem.LOCATION_FULL_STR.S",
                      "SUPERVISOR_FULL_NAME": "$elem.SUPERVISOR_FULL_NAME.S",
                      "PATIENT_CARE_FLG": "$elem.PATIENT_CARE_FLG.S",
                      "PRIMARY_CONTACT_LOCATION": "$elem.PRIMARY_CONTACT_LOCATION.S",
                      "ACCTBLE_USER_FULL_LOCATION": "$elem.ACCTBLE_USER_FULL_LOCATION.S",
                      "SUPERVISOR_FULL_LOCATION": "$elem.SUPERVISOR_FULL_LOCATION.S",
                      "OFFICIAL_NM": "$elem.OFFICIAL_NM.S",
                      "WRKF_KEY": "$elem.WRKF_KEY.N",
                      "SUPERVISOR_WRKF_KEY": "$elem.SUPERVISOR_WRKF_KEY.N",
                      "CURRENT_FLG": "$elem.CURRENT_FLG.S",
                      "ASSET_VALUE_KEY": "$elem.ASSET_VALUE_KEY.N",
                      "ASSET_KEY": "$elem.ASSET_KEY.S",
                      "INTEREST_ASSET_KEY": "$elem.INTEREST_ASSET_KEY.N",
                      "INITIAL_EVENT_KEY": "$elem.INITIAL_EVENT_KEY.N",
                      "EVENT_KEY": "$elem.EVENT_KEY.N",
                      "ACTIVITY_STATUS_DESC": "$elem.ACTIVITY_STATUS_DESC.S",
                      "ASSET_TYP_CD": "$elem.ASSET_TYP_CD.S",
                      "IC_CD": "$elem.IC_CD.S",
                      "ORG_CD": "$elem.ORG_CD.S",
                      "MANUFACTURER_NM": "$elem.MANUFACTURER_NM.S",
                      "MODEL_NBR": "$elem.MODEL_NBR.S",
                      "SERIAL_NBR": "$elem.SERIAL_NBR.S",
                      "FULL_NAME": "$elem.FULL_NAME.S",
                      "CURR_NED_ID": "$elem.CURR_NED_ID.S",
                      "ORIG_NED_ID": "$elem.ORIG_NED_ID.S",
                      "PO_NBR": "$elem.PO_NBR.S",
                      "ACQUISITION_DT": "$elem.ACQUISITION_DT.S",
                      "LAST_INVENTORY_DT": "$elem.LAST_INVENTORY_DT.S",
                      "SENSITIVE_FLG": "$elem.SENSITIVE_FLG.S",
                      "ASSET_TYP_DESC": "$elem.ASSET_TYP_DESC.S",
                      "ACQUISITION_COST": "$elem.ACQUISITION_COST.N",
                      "AGRMNT_ID": "$elem.AGRMNT_ID.S",
                      "LAST_INVENTORY_RESOLUTION": "$elem.LAST_INVENTORY_RESOLUTION.S",
                      "UNCAPITALIZED_REASON_CD": "$elem.UNCAPITALIZED_REASON_CD.S",
                      "UNCAPITALIZED_REASON_DESC": "$elem.UNCAPITALIZED_REASON_DESC.S",
                      "CONDITION_DESC": "$elem.CONDITION_DESC.S",
                      "EVENT_DT": "$elem.EVENT_DT.S",
                      "EVENT_TYP_DESC": "$elem.EVENT_TYP_DESC.S",
                      "PERSONAL_CUSTODY_FLG": "$elem.PERSONAL_CUSTODY_FLG.S",
                      "SERVICE_LIFE": "$elem.SERVICE_LIFE.S",
                      "ASSET_DECAL_NBR": "$elem.ASSET_DECAL_NBR.S",
                      "CAPITAL_FLG": "$elem.CAPITAL_FLG.S",
                      "APPROPRIATION_CD": "$elem.APPROPRIATION_CD.S",
                      "ACCUMULATED_DEPRECIATION": "$elem.ACCUMULATED_DEPRECIATION.S",
                      "MONTHLY_DEPRECIATION": "$elem.MONTHLY_DEPRECIATION.N",
                      "YTD_DEPRECIATION": "$elem.YTD_DEPRECIATION.N",
                      "ASSET_VALUE": "$elem.ASSET_VALUE.N",
                      "OTHER_USER": "$elem.OTHER_USER.S",
                      "OLD_ASSET_ID": "$elem.OLD_ASSET_ID.S",
                      "RESPONSIBILITY_BEGIN_DT": "$elem.RESPONSIBILITY_BEGIN_DT.S",
                      "NON_STANDARD_DESC": "$elem.NON_STANDARD_DESC.S",
                      "WARRANTY_EXPIRATION_DT": "$elem.WARRANTY_EXPIRATION_DT.S",
                      "LOCATION_OFFSITE_DESC": "$elem.LOCATION_OFFSITE_DESC.S",
                      "LOCATION_ADDRESS_LINE_1": "$elem.LOCATION_ADDRESS_LINE_1.S",
                      "LOCATION_ADDRESS_LINE_2": "$elem.LOCATION_ADDRESS_LINE_2.S",
                      "LOCATION_ADDRESS_LINE_3": "$elem.LOCATION_ADDRESS_LINE_3.S",
                      "LOCATION_CITY_NM": "$elem.LOCATION_CITY_NM.S",
                      "LOCATION_STATE_CD": "$elem.LOCATION_STATE_CD.S",
                      "LOCATION_STATE_NM": "$elem.LOCATION_STATE_NM.S",
                      "LOCATION_COUNTRY_NM": "$elem.LOCATION_COUNTRY_NM.S",
                      "LOCATION_COUNTY_NM": "$elem.LOCATION_COUNTY_NM.S",
                      "LOCATION_POSTAL_CD": "$elem.LOCATION_POSTAL_CD.S",
                      "FLAG_1": "$elem.FLAG_1.S"
                    }#if($foreach.hasNext),#end

                #end
                  ]
                }
      security:
        - request-authorizer: []

components:
  responses:
    vdsresponse:
      description: Response with a list of VDS User objects
      content:
        application/json:
          schema:
            type: object
            xml:
              wrapped: true
              name: vdsuser
            properties:
              NumberOfRecords:
                type: integer
                description: number of VDS User objects in response
              User:
                type: array
                items:
                  $ref: '#/components/schemas/VDSUser'

    ChangesByIcResponse:
      description: Response with a list of NED Changes records
      content:
        application/json:
          schema:
            type: object
            properties:
              NUMBER_OF_RECORDS:
                type: integer
                description: number of NED Changes records in response
              NED_CHANGES_RECORD:
                type: array
                items:
                  $ref: '#/components/schemas/NEDChangeRecord'

    vdsUsersByIcResponse:
      description: Response with a list of User Records for given IC
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VDSUsersChunk'

    nvPropsResponse:
      description: Response with a list of nVision Properties objects
      content:
        application/json:
          schema:
            type: object
            xml:
              wrapped: true
              name: nvprop
            properties:
              NumberOfRecords:
                type: integer
                description: number of nVision Properties objects in response
              Property:
                type: array
                items:
                  $ref: '#/components/schemas/nVProperty'

  schemas:

    NEDChangeRecord:
      type: object
      properties:
        NIHSITE:
          type: string
        ACTION_DATE:
          type: string
        ACTION:
          type: string
        UNIQUEIDENTIFIER:
          type: string
        ACTION_TIME:
          type: string
        SN:
          type: string
        NIHORGACRONYM:
          type: string
        GIVENNAME:
          type: string

    VDSUsersChunk:
      type: object
      properties:
        count:
          type: integer
        error:
          type: string
          description: Error message if not empty - rest of the fields are zeros
        lastEvaluatedKey:
          type: string
          description: If present, the result is incomplete, pass this value as "lastEvaluatedKey" query parameter to get the next chunk of results
        items:
          type: array
          items:
            $ref: '#/components/schemas/VDSUser'

    VDSUser:
      type: object
      properties:
        UNIQUEIDENTIFIER:
          type: string
          example: 0011234567
        NIHDUPUID:
          type: string
          example: 0013312345
        NIHADACCTREQ:
          type: string
          example: Y
        NIHSSOUSERNAME:
          type: string
          example: smithj
        distinguishedName:
          type: string
          example: CN=smithj,OU=Users,OU=NCI-Frederick,OU=NIH,OU=AD,DC=nih,DC=gov
        NIHADMAILBOXREQ:
          type: string
          example: Y
        NIHPRIMARYSMTP:
          type: string
          example: johnj@mail.gov
        MAIL:
          type: string
          example: smithj@mail.gov
        proxyAddresses:
          type: array
          items:
            type: string
          example:
            - smtp:smithj@nci.gov
            - X500:/O=NIH/OU=NIHEXCHANGE/cn=Recipients/cn=smithj
            - smtp:smithj@nih.mail.onmicrosoft.com
            - smtp:smithj@nih.gov
        displayName:
          type: string
          example: Smith, John (NIH/NCI) [C]
        PERSONALTITLE:
          type: string
          example: Mr
        GIVENNAME:
          type: string
          example: John
        NIHCOMMONGIVENNAME:
          type: string
          example: John
        NIHNOMIDDLENAME:
          type: string
          example: N
        MIDDLENAME:
          type: string
          example: Joseph
        NIHCOMMONMIDDLENAM:
          type: string
          example: Joseph
        NIHMIXCASESN:
          type: string
          example: Smith Joseph
        NIHMIXCASECOMMONSN:
          type: string
          example: Smith
        SN:
          type: string
          example: Smith
        NIHCOMMONSN:
          type: string
          example: Smith
        GENERATIONQUALIF:
          type: string
          example: Jr
        NIHCOMMONGENQUALIF:
          type: string
          example: Jr
        NIHSUFFIXQUALIFIER:
          type: string
          example: M.D., PH.D.
        TITLE:
          type: string
          example: Board of Scientific Counselor
        NIHIPD:
          type: string
          example: Other
        NIHBADGETITLE:
          type: string
          example: Physician
        NIHIDBADGEEXPDATE:
          type: string
          example: 2026-11-12 00:00:00.0
        NIHSAC:
          type: string
          example: HNCB45
        NIHPrivacyAwarenessCompDate:
          type: string
        PrivacyAwarenessRefresherCompDate:
          type: string
        NIHInformationSecurityAwarenessCompDate:
          type: string
        InformationSecurityRefresherCompDate:
          type: string
        description:
          type: string
          example: This account is Enabled by iam.nih.gov, because the Background Investigation Adjudication is complete, or is in the process of Mailbox creation
        ORGANIZATIONALSTAT:
          type: string
          example: CONTRACTOR
        NIHSUBORGSTATUS:
          type: string
          example: CONTRACTOR
        NIHSUMMERSTATUS:
          type: string
          example: N
        NIHORGPATH:
          type: string
          example: NCI DCTD DTP NPB
        NIHPHYSICALADDRESS:
          type: string
          example: FDC 123 BG RM 119$431 WOOD STREET$FREDERICK MD 21702
        NIHORGACRONYM:
          type: string
          example: NCI
        NIHSERVAO:
          type: string
          example: 0010101234
        MANAGER:
          type: string
          example: 987654321
        NIHCOTRID:
          type: string
          example: 0010123456
        NIHPOC:
          type: string
          example: 0010123456
        NIHCOMPANYNAME:
          type: string
          example: FFRDC FNLCR LBR (Leidos Biomedical Research Inc.)
        NIHCOMPANYPHONE:
          type: string
          example: + 1 111 123 4567
        countryCode:
          type: string
          example: 111
        TELEPHONENUMBER:
          type: string
          example: +1 301 111 1111
        MOBILETELEPHONENUM:
          type: string
          example: +1 301 123 4567
        mobile:
          type: string
          example: 301.123.4567
        ipPhone:
          type: string
          example: (301) 111-1111
        NIHSITE:
          type: string
          example: MD-FCR
        L:
          type: string
          example: Frederick
        BUILDINGNAME:
          type: string
          example: FDC 123
        ROOMNUMBER:
          type: string
          example: 123
        POSTALADDRESS:
          type: string
          example: BG 111 RM 119$1050 BOYLES STREET$FREDERICK MD 21702
        NIHIDBADGELESS6MOS:
          type: string
          example: N
        managedObjects:
          type: string
          example: CN=NCI-Frederick Rees alarms,OU=Distribution Lists,OU=Messaging,OU=NCI-Frederick,OU=NIH,OU=AD,DC=nih,DC=gov
        memberOf:
          type: array
          items:
            type: string
          example:
            - CN=NIH CONTRACTOR ACCOUNTS,OU=NIH WIDE GROUPS,OU=ADOG,DC=nih,DC=gov
            - CN=NIH Exchange Users,OU=Groups,OU=CIT,OU=NIH,ou=ad,dc=nih,dc=gov
            - CN=PrimaryUsers,OU=Accounts,OU=CES,OU=OPS,DC=nih,DC=gov
        NIHCREATETIMESTAMP:
          type: string
          example: 2009-01-14 14:12:30.0
        NIHMODIFYTIMESTAMP:
          type: string
          example: 2021-12-27 10:25:49.0
        NIHMODIFIERSNAME:
          type: string
          example: 123456789
        NIHDIRENTRYEFFECTIVEDATE:
          type: string
          example: 2009-01-14 00:00:00.0
        NIHDIRENTRYEXPIRATIONDATE:
          type: string
          example: 2009-01-14 00:00:00.0
        userAccountControl:
          type: string
          example: 123
        providedEmail:
          description: Email calculated based on three fields (by priority) - proxyAddresses, MAIL, NIHPRIMARYSMTP
          type: string
          example: smithj@mail.gov
        DOC:
          description: Calculated DOC value based on NIHSAC and NIHORGPATH
          type: string
          example: CBIIT

    nVProperty:
      type: object
      properties:
        PRIMARY_CONTACT_FULL_NM:
          type: string
          example: SMITH, JOHN ANDREW
        LOCATION_FULL_STR:
          type: string
          example: CAMPUS /BUILDING 10 - CLINICAL CENTER /6A10
        SUPERVISOR_FULL_NAME:
          type: string
          example: LAST, FIST
        PATIENT_CARE_FLG:
          type: string
          example: Y
        PRIMARY_CONTACT_LOCATION:
          type: string
          example: 9609 MEDICAL CENTER, ADDRESS
        ACCTBLE_USER_FULL_LOCATION:
          type: string
          example:
        SUPERVISOR_FULL_LOCATION:
          type: string
          example:
        OFFICIAL_NM:
          type: string
          example:
        WRKF_KEY:
          type: string
          example:
        SUPERVISOR_WRKF_KEY:
          type: string
          example:
        CURRENT_FLG:
          type: string
          example:
        ASSET_VALUE_KEY:
          type: string
          example:
        ASSET_KEY:
          type: string
          example:
        INTEREST_ASSET_KEY:
          type: string
          example:
        INITIAL_EVENT_KEY:
          type: string
          example:
        EVENT_KEY:
          type: string
          example:
        ACTIVITY_STATUS_DESC:
          type: string
          example:
        ASSET_TYP_CD:
          type: string
          example:
        IC_CD:
          type: string
          example:
        ORG_CD:
          type: string
          example:
        MANUFACTURER_NM:
          type: string
          example:
        MODEL_NBR:
          type: string
          example:
        SERIAL_NBR:
          type: string
          example:
        FULL_NAME:
          type: string
          example:
        CURR_NED_ID:
          type: string
          example:
        ORIG_NED_ID:
          type: string
          example:
        PO_NBR:
          type: string
          example:
        ACQUISITION_DT:
          type: string
          example:
        LAST_INVENTORY_DT:
          type: string
          example:
        SENSITIVE_FLG:
          type: string
          example:
        ASSET_TYP_DESC:
          type: string
          example:
        ACQUISITION_COST:
          type: string
          example:
        AGRMNT_ID:
          type: string
          example:
        LAST_INVENTORY_RESOLUTION:
          type: string
          example:
        UNCAPITALIZED_REASON_CD:
          type: string
          example:
        UNCAPITALIZED_REASON_DESC:
          type: string
          example:
        CONDITION_DESC:
          type: string
          example:
        EVENT_DT:
          type: string
          example:
        EVENT_TYP_DESC:
          type: string
          example:
        PERSONAL_CUSTODY_FLG:
          type: string
          example:
        SERVICE_LIFE:
          type: string
          example:
        ASSET_DECAL_NBR:
          type: string
          example:
        CAPITAL_FLG:
          type: string
          example:
        APPROPRIATION_CD:
          type: string
          example:
        ACCUMULATED_DEPRECIATION:
          type: string
          example:
        MONTHLY_DEPRECIATION:
          type: string
          example:
        YTD_DEPRECIATION:
          type: string
          example:
        ASSET_VALUE:
          type: string
          example:
        OTHER_USER:
          type: string
          example:
        OLD_ASSET_ID:
          type: string
          example:
        RESPONSIBILITY_BEGIN_DT:
          type: string
          example:
        NON_STANDARD_DESC:
          type: string
          example:
        WARRANTY_EXPIRATION_DT:
          type: string
          example:
        LOCATION_OFFSITE_DESC:
          type: string
          description: choices are null, GENERAL OFF SITE FOR HVS, OFFSITE, HOME USE, OFF SITE LOCATION
          example:
        LOCATION_ADDRESS_LINE_1:
          type: string
          example:
        LOCATION_ADDRESS_LINE_2:
          type: string
          example:
        LOCATION_ADDRESS_LINE_3:
          type: string
          example:
        LOCATION_CITY_NM:
          type: string
          example:
        LOCATION_STATE_CD:
          type: string
          example:
        LOCATION_STATE_NM:
          type: string
          example:
        LOCATION_COUNTRY_NM:
          type: string
          example:
        LOCATION_COUNTY_NM:
          type: string
          example:
        LOCATION_POSTAL_CD:
          type: string
          example:
        FLAG_1:
          type: string
          example:

  securitySchemes:
    request-authorizer:
      type: apiKey
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: custom
      x-amazon-apigateway-authorizer:
        type: token
        authorizerUri: ${auth_lambda_invoke_arn}
        authorizerResultTtlInSeconds: 300
